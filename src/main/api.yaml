swagger: "2.0"
info:
  description: "Dybov's and Lavrov's blse lab"
  title: "Rubbable api"
  version: "1.0.0"


host: "localhost:8000"
basePath: "/api"

schemes:
- "http"
paths:
  
  /auth/login/:
    post:
      description: "Login with phone"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: body
        schema:
          $ref: "#/definitions/UserLoginRequest"
      
      responses:
        204:
          description: "Code sent"
        400:
          description: "Code already sent"
  
  /auth/verify-phone/:
    post:
      description: "Verify phone"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: body
        schema:
          $ref: "#/definitions/UserPhoneVerificationRequest"
      
      responses:
        200:
          description: "Phone verified"
          schema:
            $ref: "#/definitions/UserWithJwtResponse"
        400:
          description: "Code or phone invalid"
  
    
    
  /users/me/:
    get:
      description: "Get self user profile info"
      produces:
      - "application/json"
      
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/User"
    
    patch:
      description: "Edit user's data"
      produces:
      - "application/json"
      
      parameters:
      - name: "body"
        in: body
        schema:
          $ref: "#/definitions/EditUserRequest"
          
      responses:
        401:
          description: "Unauthorized"
        400:
          description: "Invalid data"
        200:
          description: "Updated"
          schema:
            $ref:  "#/definitions/User"
            
  
  /users/{user_id}/:
    get:
      description: "Get other user profile info"
      produces:
      - "application/json"
      
      parameters:
      - name: "user_id"
        type: "integer"
        in: path
        required: true
      
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/SimpleUser"
            
        403:
          description: "Forbidden"
        
        404:
          description: "Not found"
  
  /users/activate/:
    post:
      description: "Activate user"
      produces:
      - "application/json"
      
      responses:
        401:
          description: "Unauthorized"
        400:
          description: "User has no name or already activated"
        200:
          description: "Ok"
          schema:
            $ref:  "#/definitions/User"
  
  /events/:
    get:
      description: "list of events"
      produces:
      - "application/json"
      
      parameters:
        - name: "tags"
          in: "query"
          type: "array"
          required: false
          items:
            type: "string"
        - name: "area"
          in: "query"
          type: "array"
          required: false
          maxLength: 4
          minLength: 4
          items:
            type: "number"
        
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref:  "#/definitions/Event"
              
    post:
      description: "Create event"
      produces:
      - "application/json"
      
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/EventInfo"
        
      responses:
        401:
          description: "Unauthorized"
        201:
          description: "Created"
          schema:
            $ref:  "#/definitions/Event"
  
  /events/{event_id}/:
    get:
      description: "Get event"
      produces:
      - "application/json"
      
      parameters:
        - name: "event_id"
          in: "path"
          type: integer
          required: true
        
      responses:
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/Event"
              
    patch:
      description: "Edit event"
      produces:
      - "application/json"
      
      parameters:
        - name: "event_id"
          in: "path"
          type: integer
          required: true
          
        - name: "body"
          in: "body"
          schema:
            $ref: "#/definitions/EventInfo"
        
      responses:
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
        201:
          description: "Updated"
          schema:
            $ref:  "#/definitions/Event"
    
    delete:
      description: "Delete event"
      produces:
      - "application/json"
      parameters:
        - name: "event_id"
          in: "path"
          type: integer
          required: true
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not found"
        204:
          description: "Deleted"

  /events/{event_id}/participants/:
    get:
      description: "List of event participants"
      produces:
      - "application/json"
      
      parameters:
        - name: "event_id"
          in: "path"
          type: integer
          required: true
        
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not found"
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MyEventParticipant"
  
  /events/{event_id}/participants/{participant_id}/approve/:
    post:
      description: "Approve event participant"
      produces:
      - "application/json"
      
      parameters:
        - name: "event_id"
          in: "path"
          type: integer
          required: true
        
        - name: "participant_id"
          in: "path"
          type: integer
          required: true
        
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not found"
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MyEventParticipant"
  
  
  /events/{event_id}/participants/{participant_id}/disapprove/:
    post:
      description: "Disapprove event participant"
      produces:
      - "application/json"
      
      parameters:
        - name: "event_id"
          in: "path"
          type: integer
          required: true
        
        - name: "participant_id"
          in: "path"
          type: integer
          required: true
        
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not found"
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MyEventParticipant"
              
              
  
  
  /events/{event_id}/participate/:
    post:
      description: "Participate event"
      produces:
      - "application/json"
      
      parameters:
        - name: "event_id"
          in: "path"
          type: integer
          required: true
        
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not found"
        400:
          description: "Participants limit exceed or event already started or event already finished"
        200:
          description: "Ok"
          schema:
              $ref: "#/definitions/EventParticipant"

  /events/{event_id}/cancel-participation/:
    post:
      description: "Cancel event participation"
      produces:
      - "application/json"
      
      parameters:
        - name: "event_id"
          in: "path"
          type: integer
          required: true
        
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not found"
        400:
          description: "Participation request not found"
        200:
          description: "Ok"
          schema:
              type: "array"
              items:
                $ref: "#/definitions/EventParticipant"
  
  /events/my-participations/:
    get:
      description: "List my event participations"
      produces:
      - "application/json"
        
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        200:
          description: "Ok"
          schema:
              type: "array"
              items:
                $ref: "#/definitions/EventParticipant"
  

definitions:
  
  
  SimpleUser:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      about: 
        type: "string"
  
  User:
    type: "object"
    allOf:
      - $ref: "#/definitions/SimpleUser"
        
    properties:
      phone_number:
        type: "integer"
      role:
        type: "string"
      firebase_token:
        type: "string"

  UserWithJwtResponse:
    type: "object"
    properties:
      jwt: 
        type: "string"
      user:
        $ref: "#/definitions/User"
  
  EditUserRequest:
    type: "object"
    properties:
      name:
        type: "string"
      firebase_token:
        type: "string"
    
  
  UserLoginRequest:
    type: "object"
    properties:
      phone:
        type: "integer"
  
  UserPhoneVerificationRequest:
    type: "object"
    properties:
      phone:
        type: "integer"
      code:
        type: "integer"
  
  
  Location:
    type: "object"
    properties:
      lattitude:
        type: "number"
      longtitude:
        type: "number"
  
  
  EventInfo:
    type: "object"
    properties:
      title:
          type: "string"
      startTime:
        type: "string"
      endTime:
        type: "string"
      maxParticipants:
        type: "integer"
      location:
        $ref: "#/definitions/Location"
      needParticipatingApprove:
        type: "boolean"
      tags:
        type: "array"
        items:
          type: "string"
  
        
  Event:
    type: "object"
    allOf:
      - $ref: "#/definitions/EventInfo"
  
  BaseEventParticipant:
    type: "object"
    properties:
      id:
        type: "integer"
      status:
        type: "string"
        
  MyEventParticipant:
    type: "object"
    allOf:
      - $ref: "#/definitions/BaseEventParticipant"
    properties:
      user:
        $ref: "#/definitions/SimpleUser"
  
  EventParticipant:
    type: "object"
    allOf:
      - $ref: "#/definitions/BaseEventParticipant"
    properties:
      event:
        $ref: "#/definitions/Event"

  
  
  
  
      
    
        
      
    

  


      
  


